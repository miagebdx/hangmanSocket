{"name":"Hangmansocket","tagline":"","body":"![screen](https://raw.githubusercontent.com/miagebdx/hangmanSocket/master/screen.png)\r\n##Usage\r\n\r\n- build app : `make all`\r\n- launch server : `./server 8888`\r\n- launch client : `./client localhost 8888`\r\n\r\n##Sujet\r\n\r\nCréation d'un pendu avec l'utilisation de la classe Socket.\r\n\r\n##Environnement \r\n\r\nGNU/Linux, Sublime Text\r\n\r\n##Le pendu\r\n\r\nNous voulions un pendu entièrement jouable en réseaux. Le serveur est lancé par l’hôte de la partie. Ensuite plusieurs clients peuvent se connecter sur celui-ci pour entamer une partie. \r\n\r\nPour cela nous avons implémenter une classe joueur, qui permet d'avoir un nombre de joueur dynamique sur notre serveur et ainsi avoir plusieurs jeux en cours.\r\n\r\n```C++\r\n\tclass joueur\r\n\t{\r\n\tpublic:\r\n\t\tjoueur();\r\n\t\t~joueur(){};\r\n\t\tvoid setLetterList(string _letter);\r\n\t\tstring getLetterList();\r\n\t\tstring getWord();\r\n\t\tvoid setBlank(string blankWord);\r\n\t\tstring getBlank();\r\n\t\tstring actionBlankWord(string wordBlank, string letterUti);\r\n\r\n\r\n\tprotected:\r\n\t\tstring word;\r\n\t\tstring letterList;\r\n\t\tstring blank;\r\n\r\n\r\n\t};\r\n```\r\n\r\n###Contact \r\n\r\nMail : jer.morin@free.fr\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}